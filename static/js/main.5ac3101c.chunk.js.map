{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","movieKeys","urlValidator","clearState","value","isValid","isTouched","NewMovie","state","clearForm","setState","handleChange","event","name","target","currentState","handleSubmit","addMovie","props","preventDefault","setInputInvalid","handleOnBlur","test","this","onSubmit","key","htmlFor","id","type","onChange","onBlur","disabled","Component","App","moviesFromServer","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5ac3101c.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import {\n  ChangeEventHandler,\n  Component,\n  FocusEventHandler,\n  FormEventHandler,\n} from 'react';\n\ntype Props = {\n  addMovie: (movie: Movie) => void;\n};\n\ninterface StateProperty {\n  value: string;\n  isValid: boolean;\n  isTouched: boolean;\n}\n\ninterface State {\n  title: StateProperty;\n  description: StateProperty;\n  imgUrl: StateProperty;\n  imdbUrl: StateProperty;\n  imdbId: StateProperty;\n}\n\nconst movieKeys: (keyof Movie)[] = ['title', 'description', 'imgUrl', 'imdbUrl', 'imdbId'];\nconst urlValidator = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\nconst clearState: State = {\n  title: {\n    value: '',\n    isValid: false,\n    isTouched: false,\n  },\n\n  description: {\n    value: '',\n    isValid: false,\n    isTouched: false,\n  },\n\n  imgUrl: {\n    value: '',\n    isValid: false,\n    isTouched: false,\n  },\n\n  imdbUrl: {\n    value: '',\n    isValid: false,\n    isTouched: false,\n  },\n\n  imdbId: {\n    value: '',\n    isValid: false,\n    isTouched: false,\n  },\n};\n\nexport class NewMovie extends Component<Props, State> {\n  state: State = { ...clearState };\n\n  clearForm = () => {\n    this.setState(clearState);\n  };\n\n  handleChange: ChangeEventHandler<HTMLInputElement> = (event) => {\n    const name = event.target.name as keyof State;\n    const value = event.target.value;\n\n    this.setState(currentState => ({\n      [name]: {\n        value,\n        isValid: currentState[name].isValid,\n        isTouched: currentState[name].isTouched,\n      },\n    } as Pick<State, keyof State>));\n  };\n\n  handleSubmit: FormEventHandler<HTMLFormElement> = (event) => {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state;\n\n    const { addMovie } = this.props;\n\n    event.preventDefault();\n\n    addMovie({\n      title: title.value,\n      description: description.value,\n      imgUrl: imgUrl.value,\n      imdbUrl: imdbUrl.value,\n      imdbId: imdbId.value,\n    });\n\n    this.clearForm();\n  };\n\n  setInputInvalid = (name: keyof State) => {\n    const { value } = this.state[name];\n\n    this.setState(currentState => ({\n      [name]: {\n        value: currentState[name].value,\n        isValid: !!value,\n        isTouched: true,\n      },\n    } as Pick<State, keyof State>));\n  };\n\n  handleOnBlur: FocusEventHandler<HTMLInputElement> = (event) => {\n    const name = event.target.name as keyof State;\n    const { value } = this.state[name];\n\n    switch (name) {\n      case 'title':\n      case 'imdbId':\n        this.setInputInvalid(name);\n        break;\n\n      case 'imdbUrl':\n      case 'imgUrl':\n        this.setInputInvalid(name);\n\n        if (!urlValidator.test(value)) {\n          this.setState(currentState => ({\n            [name]: {\n              value: currentState[name].value,\n              isValid: false,\n              isTouched: true,\n            },\n          } as Pick<State, keyof State>));\n        }\n\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  render() {\n    const {\n      title,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state;\n\n    return (\n      <form\n        onSubmit={this.handleSubmit}\n      >\n        {\n          movieKeys.map(key => (\n            <div className=\"field\" key={key}>\n              <label htmlFor={key} className=\"label\">{key}</label>\n              <div className=\"control\">\n                <input\n                  className={\n                    `input ${!this.state[key].isValid\n                      && this.state[key].isTouched ? 'is-danger' : ''}`\n                  }\n                  id={key}\n                  name={key}\n                  type=\"text\"\n                  value={this.state[key].value}\n                  onChange={this.handleChange}\n                  onBlur={this.handleOnBlur}\n                />\n              </div>\n\n              {\n                !this.state[key].isValid\n                && this.state[key].isTouched\n                && (\n                  <p className=\"help is-danger\">\n                    {`${key} is not valid`}\n                  </p>\n                )\n              }\n            </div>\n          ))\n        }\n\n        <button\n          type=\"submit\"\n          className=\"button is-link\"\n          disabled={\n            !title.isValid\n            || !imgUrl.isValid\n            || !imdbUrl.isValid\n            || !imdbId.isValid\n          }\n        >\n          Add\n        </button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie: Movie) => {\n    this.setState((currentState) => ({\n      movies: [...currentState.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}