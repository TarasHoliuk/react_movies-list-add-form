{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","movieKeys","NewMovie","state","handleChange","event","name","target","value","setState","currentState","handleSubmit","addMovie","props","preventDefault","validateInput","onSubmit","this","key","htmlFor","id","type","onChange","onBlur","Component","App","moviesFromServer","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1945e2fe.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import {\n  ChangeEventHandler,\n  Component,\n  FocusEventHandler,\n  FormEventHandler,\n} from 'react';\n\ntype Props = {\n  addMovie: (movie: Movie) => void;\n};\n\ninterface State {\n  title: [string, boolean];\n  description: [string, boolean];\n  imgUrl: [string, boolean];\n  imdbUrl: [string, boolean];\n  imdbId: [string, boolean];\n}\n\nconst movieKeys: (keyof Movie)[] = ['title', 'description', 'imgUrl', 'imdbUrl', 'imdbId'];\n\nexport class NewMovie extends Component<Props, State> {\n  state: State = {\n    title: ['', false],\n    description: ['', false],\n    imgUrl: ['', false],\n    imdbUrl: ['', false],\n    imdbId: ['', false],\n  };\n\n  handleChange: ChangeEventHandler<HTMLInputElement> = (event) => {\n    const name = event.target.name as keyof State;\n    const value = event.target.value;\n\n    this.setState(currentState => ({\n      [name]: [value, currentState[name][1]],\n    } as Pick<State, keyof State>));\n  };\n\n  handleSubmit: FormEventHandler<HTMLFormElement> = (event) => {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state;\n\n    const { addMovie } = this.props;\n\n    event.preventDefault();\n\n    addMovie({\n      title: title[0],\n      description: description[0],\n      imgUrl: imgUrl[0],\n      imdbUrl: imdbUrl[0],\n      imdbId: imdbId[0],\n    });\n  };\n\n  validateInput: FocusEventHandler<HTMLInputElement> = (event) => {\n    const name = event.target.name as keyof State;\n    const [value] = this.state[name];\n\n    if (!value) {\n      this.setState(currentState => ({\n        [name]: [currentState[name][0], false],\n      } as Pick<State, keyof State>));\n    } else {\n      this.setState(currentState => ({\n        [name]: [currentState[name][0], true],\n      } as Pick<State, keyof State>));\n    }\n  };\n\n  render() {\n    return (\n      <form\n        onSubmit={this.handleSubmit}\n      >\n\n        {\n          movieKeys.map(key => (\n            <div className=\"field\">\n              <label htmlFor={key} className=\"label\">{key}</label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  id={key}\n                  name={key}\n                  type=\"text\"\n                  value={this.state[key][0]}\n                  onChange={this.handleChange}\n                  onBlur={this.validateInput}\n                />\n              </div>\n\n              {\n                !this.state[key][1] && <span>This field is required</span>\n              }\n            </div>\n          ))\n        }\n\n        <button\n          type=\"submit\"\n          className=\"button is-link\"\n        >\n          Add\n        </button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie: Movie) => {\n    this.setState((currentState) => ({\n      movies: [...currentState.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}