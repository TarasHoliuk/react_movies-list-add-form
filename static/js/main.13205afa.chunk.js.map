{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","movieKeys","urlValidator","NewMovie","state","value","isValid","isTouched","handleChange","event","name","target","setState","currentState","handleSubmit","addMovie","props","preventDefault","setInputInvalid","handleOnBlur","test","onSubmit","this","key","htmlFor","id","type","onChange","onBlur","Component","App","moviesFromServer","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.13205afa.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import {\n  ChangeEventHandler,\n  Component,\n  FocusEventHandler,\n  FormEventHandler,\n} from 'react';\n\ntype Props = {\n  addMovie: (movie: Movie) => void;\n};\n\ninterface StateProperty {\n  value: string;\n  isValid: boolean;\n  isTouched: boolean;\n}\n\ninterface State {\n  title: StateProperty;\n\n  description: StateProperty;\n\n  imgUrl: StateProperty;\n\n  imdbUrl: StateProperty;\n\n  imdbId: StateProperty;\n}\n\nconst movieKeys: (keyof Movie)[] = ['title', 'description', 'imgUrl', 'imdbUrl', 'imdbId'];\nconst urlValidator = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\nexport class NewMovie extends Component<Props, State> {\n  state: State = {\n    title: {\n      value: '',\n      isValid: false,\n      isTouched: false,\n    },\n\n    description: {\n      value: '',\n      isValid: false,\n      isTouched: false,\n    },\n\n    imgUrl: {\n      value: '',\n      isValid: false,\n      isTouched: false,\n    },\n\n    imdbUrl: {\n      value: '',\n      isValid: false,\n      isTouched: false,\n    },\n\n    imdbId: {\n      value: '',\n      isValid: false,\n      isTouched: false,\n    },\n  };\n\n  handleChange: ChangeEventHandler<HTMLInputElement> = (event) => {\n    const name = event.target.name as keyof State;\n    const value = event.target.value;\n\n    this.setState(currentState => ({\n      [name]: {\n        value,\n        isValid: currentState[name].isValid,\n        isTouched: currentState[name].isTouched,\n      },\n    } as Pick<State, keyof State>));\n  };\n\n  handleSubmit: FormEventHandler<HTMLFormElement> = (event) => {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state;\n\n    const { addMovie } = this.props;\n\n    event.preventDefault();\n\n    addMovie({\n      title: title.value,\n      description: description.value,\n      imgUrl: imgUrl.value,\n      imdbUrl: imdbUrl.value,\n      imdbId: imdbId.value,\n    });\n  };\n\n  setInputInvalid = (name: keyof State) => {\n    const { value } = this.state[name];\n\n    this.setState(currentState => ({\n      [name]: {\n        value: currentState[name].value,\n        isValid: !!value,\n        isTouched: true,\n      },\n    } as Pick<State, keyof State>));\n  };\n\n  handleOnBlur: FocusEventHandler<HTMLInputElement> = (event) => {\n    const name = event.target.name as keyof State;\n    const { value } = this.state[name];\n\n    switch (name) {\n      case 'title':\n      case 'imdbId':\n        this.setInputInvalid(name);\n        break;\n\n      case 'imdbUrl':\n      case 'imgUrl':\n        this.setInputInvalid(name);\n\n        if (!urlValidator.test(value)) {\n          this.setState(currentState => ({\n            [name]: {\n              value: currentState[name].value,\n              isValid: false,\n              isTouched: true,\n            },\n          } as Pick<State, keyof State>));\n        }\n\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  render() {\n    return (\n      <form\n        onSubmit={this.handleSubmit}\n      >\n\n        {\n          movieKeys.map(key => (\n            <div className=\"field\">\n              <label htmlFor={key} className=\"label\">{key}</label>\n              <div className=\"control\">\n                <input\n                  className={`input ${!this.state[key].isValid && this.state[key].isTouched ? 'is-danger' : ''}`}\n                  id={key}\n                  name={key}\n                  type=\"text\"\n                  value={this.state[key].value}\n                  onChange={this.handleChange}\n                  onBlur={this.handleOnBlur}\n                />\n              </div>\n\n              {\n                !this.state[key].isValid\n                && this.state[key].isTouched\n                && (\n                  <p className=\"help is-danger\">\n                    {`${key} is not valid`}\n                  </p>\n                )\n              }\n            </div>\n          ))\n        }\n\n        <button\n          type=\"submit\"\n          className=\"button is-link\"\n        >\n          Add\n        </button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie: Movie) => {\n    this.setState((currentState) => ({\n      movies: [...currentState.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}